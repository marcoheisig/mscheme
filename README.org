#+TITLE: mscheme

mscheme is a Scheme interpreter written in pure Matlab.

* History
  In one of my math lectures, I had to submit several programming exercises in
  Matlab. In my oppinion, Matlab is not a particulary good programming
  language - it does not even have a formal standard. Much worse however,
  there is no full fledged implementation of Matlab in the public domain
  (Octave is not a drop-in replaceent). Unfortunately this makes Matlab pretty
  much a dead end when it comes to research in numerical mathematics.

  Instead of whining that I want another programming language for the
  assignments, I decided to fix things myself and write this little Scheme
  interpreter. Finally you can write your Matlab assignments in Scheme!

* Standard compliance
  mscheme aims to be fully R5RS compliant, but currently falls short in a
  number of cases:
  - tail recursion
  - distinction between numeric types
  - many library functions
  - ...

* Examples
  To use mscheme, simply add the =+mscheme/= folder to your Matlab path and
  type =mscheme.repl()= to get an interactive Scheme session.

  Alternatively you can use =mscheme.load( 'some/file.scm' )= to execute the
  contents of a Scheme file.

  #+BEGIN_SRC scheme
    (define (square x)
      (* x y))

    (map square `(1 2 3 4 5))

    (square (* 2 (eye 4)))
  #+END_SRC
  #+BEGIN_SRC scheme
    (define-macro (when condition . body)
      `(if ,condition
           (begin ,@body)))
  #+END_SRC
